Terminals unused in grammar

   NONE
   TRUE
   FALSE
   IMPORT
   INDENT
   DEDENT
   TOK_STUFF
   TOK_REST
   DEF
   MINUS_GREATER
   L_PAREN
   R_PAREN
   EQUAL
   COMMA
   COLON
   SEMICOLON
   PLUS_EQUAL
   MINUS_EQUAL
   STAR_EQUAL
   AT_EQUAL
   R_SLASH_EQUAL
   PERCENT_EQUAL
   AND_EQUAL
   BAR_EQUAL
   XOR_EQUAL
   LESS_LESS_EQUAL
   GREATER_GREATER_EQUAL
   STAR_STAR_EQUAL
   SLASH_SLASH_EQUAL
   T_PASS
   T_BREAK
   T_CONTINUE
   T_RETURN
   FROM
   T_DOT
   T_DOT_DOT_DOT
   T_AS
   T_IF
   T_ELIF
   T_ELSE
   T_WHILE
   T_FOR
   T_IN
   LIT_OR
   LIT_AND
   LIT_NOT
   LESS
   GREATER
   EQUAL_EQUAL
   GREATER_EQUAL
   LESS_EQUAL
   LESS_GREATER
   EXCL_EQUAL
   NOT_IN
   T_IS
   IS_NOT


Grammar

    0 $accept: start $end

    1 start: expr NEWLINE
    2      | star_expr NEWLINE
    3      | expr
    4      | star_expr
    5      | END

    6 star_expr: MULTIPLY expr

    7 expr: expr OR xor_expr
    8     | xor_expr

    9 xor_expr: xor_expr XOR and_expr
   10         | and_expr

   11 and_expr: and_expr AND shift_expr
   12         | shift_expr

   13 shift_expr: shift_expr LESS_LESS arith_expr
   14           | shift_expr GREATER_GREATER arith_expr
   15           | arith_expr

   16 arith_expr: arith_expr PLUS term
   17           | arith_expr MINUS term
   18           | term

   19 term: term R_SLASH_SLASH factor
   20     | term MULTIPLY factor
   21     | term T_AT factor
   22     | term R_SLASH factor
   23     | term PERCENT factor
   24     | factor

   25 factor: PLUS factor
   26       | MINUS factor
   27       | TILDA factor
   28       | power

   29 power: atom STAR_STAR factor
   30      | atom

   31 atom: T_NAME
   32     | T_NUMBER
   33     | T_STRING
   34     | "..."
   35     | "None"
   36     | "True"
   37     | "False"


Terminals, with rules where they appear

$end (0) 0
error (256)
NONE (258)
TRUE (259)
FALSE (260)
IMPORT (261)
NEWLINE (262) 1 2
INDENT (263)
DEDENT (264)
END (265) 5
TOK_STUFF (266)
TOK_REST (267)
T_NUMBER (268) 32
T_STRING (269) 33
T_NAME (270) 31
PLUS (271) 16 25
MULTIPLY (272) 6 20
MINUS (273) 17 26
OR (274) 7
TILDA (275) 27
LESS_LESS (276) 13
GREATER_GREATER (277) 14
STAR_STAR (278) 29
R_SLASH (279) 22
R_SLASH_SLASH (280) 19
T_AT (281) 21
PERCENT (282) 23
AND (283) 11
XOR (284) 9
DEF (285)
MINUS_GREATER (286)
L_PAREN (287)
R_PAREN (288)
EQUAL (289)
COMMA (290)
COLON (291)
SEMICOLON (292)
PLUS_EQUAL (293)
MINUS_EQUAL (294)
STAR_EQUAL (295)
AT_EQUAL (296)
R_SLASH_EQUAL (297)
PERCENT_EQUAL (298)
AND_EQUAL (299)
BAR_EQUAL (300)
XOR_EQUAL (301)
LESS_LESS_EQUAL (302)
GREATER_GREATER_EQUAL (303)
STAR_STAR_EQUAL (304)
SLASH_SLASH_EQUAL (305)
T_PASS (306)
T_BREAK (307)
T_CONTINUE (308)
T_RETURN (309)
FROM (310)
T_DOT (311)
T_DOT_DOT_DOT (312)
T_AS (313)
T_IF (314)
T_ELIF (315)
T_ELSE (316)
T_WHILE (317)
T_FOR (318)
T_IN (319)
LIT_OR (320)
LIT_AND (321)
LIT_NOT (322)
LESS (323)
GREATER (324)
EQUAL_EQUAL (325)
GREATER_EQUAL (326)
LESS_EQUAL (327)
LESS_GREATER (328)
EXCL_EQUAL (329)
NOT_IN (330)
T_IS (331)
IS_NOT (332)
"..." (333) 34
"None" (334) 35
"True" (335) 36
"False" (336) 37


Nonterminals, with rules where they appear

$accept (82)
    on left: 0
start (83)
    on left: 1 2 3 4 5, on right: 0
star_expr (84)
    on left: 6, on right: 2 4
expr (85)
    on left: 7 8, on right: 1 3 6 7
xor_expr (86)
    on left: 9 10, on right: 7 8 9
and_expr (87)
    on left: 11 12, on right: 9 10 11
shift_expr (88)
    on left: 13 14 15, on right: 11 12 13 14
arith_expr (89)
    on left: 16 17 18, on right: 13 14 15 16 17
term (90)
    on left: 19 20 21 22 23 24, on right: 16 17 18 19 20 21 22 23
factor (91)
    on left: 25 26 27 28, on right: 19 20 21 22 23 24 25 26 27 29
power (92)
    on left: 29 30, on right: 28
atom (93)
    on left: 31 32 33 34 35 36 37, on right: 29 30


state 0

    0 $accept: . start $end

    END       shift, and go to state 1
    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MULTIPLY  shift, and go to state 6
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    start       go to state 13
    star_expr   go to state 14
    expr        go to state 15
    xor_expr    go to state 16
    and_expr    go to state 17
    shift_expr  go to state 18
    arith_expr  go to state 19
    term        go to state 20
    factor      go to state 21
    power       go to state 22
    atom        go to state 23


state 1

    5 start: END .

    $default  reduce using rule 5 (start)


state 2

   32 atom: T_NUMBER .

    $default  reduce using rule 32 (atom)


state 3

   33 atom: T_STRING .

    $default  reduce using rule 33 (atom)


state 4

   31 atom: T_NAME .

    $default  reduce using rule 31 (atom)


state 5

   25 factor: PLUS . factor

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    factor  go to state 24
    power   go to state 22
    atom    go to state 23


state 6

    6 star_expr: MULTIPLY . expr

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    expr        go to state 25
    xor_expr    go to state 16
    and_expr    go to state 17
    shift_expr  go to state 18
    arith_expr  go to state 19
    term        go to state 20
    factor      go to state 21
    power       go to state 22
    atom        go to state 23


state 7

   26 factor: MINUS . factor

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    factor  go to state 26
    power   go to state 22
    atom    go to state 23


state 8

   27 factor: TILDA . factor

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    factor  go to state 27
    power   go to state 22
    atom    go to state 23


state 9

   34 atom: "..." .

    $default  reduce using rule 34 (atom)


state 10

   35 atom: "None" .

    $default  reduce using rule 35 (atom)


state 11

   36 atom: "True" .

    $default  reduce using rule 36 (atom)


state 12

   37 atom: "False" .

    $default  reduce using rule 37 (atom)


state 13

    0 $accept: start . $end

    $end  shift, and go to state 28


state 14

    2 start: star_expr . NEWLINE
    4      | star_expr .

    NEWLINE  shift, and go to state 29

    $default  reduce using rule 4 (start)


state 15

    1 start: expr . NEWLINE
    3      | expr .
    7 expr: expr . OR xor_expr

    NEWLINE  shift, and go to state 30
    OR       shift, and go to state 31

    $default  reduce using rule 3 (start)


state 16

    8 expr: xor_expr .
    9 xor_expr: xor_expr . XOR and_expr

    XOR  shift, and go to state 32

    $default  reduce using rule 8 (expr)


state 17

   10 xor_expr: and_expr .
   11 and_expr: and_expr . AND shift_expr

    AND  shift, and go to state 33

    $default  reduce using rule 10 (xor_expr)


state 18

   12 and_expr: shift_expr .
   13 shift_expr: shift_expr . LESS_LESS arith_expr
   14           | shift_expr . GREATER_GREATER arith_expr

    LESS_LESS        shift, and go to state 34
    GREATER_GREATER  shift, and go to state 35

    $default  reduce using rule 12 (and_expr)


state 19

   15 shift_expr: arith_expr .
   16 arith_expr: arith_expr . PLUS term
   17           | arith_expr . MINUS term

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37

    $default  reduce using rule 15 (shift_expr)


state 20

   18 arith_expr: term .
   19 term: term . R_SLASH_SLASH factor
   20     | term . MULTIPLY factor
   21     | term . T_AT factor
   22     | term . R_SLASH factor
   23     | term . PERCENT factor

    MULTIPLY       shift, and go to state 38
    R_SLASH        shift, and go to state 39
    R_SLASH_SLASH  shift, and go to state 40
    T_AT           shift, and go to state 41
    PERCENT        shift, and go to state 42

    $default  reduce using rule 18 (arith_expr)


state 21

   24 term: factor .

    $default  reduce using rule 24 (term)


state 22

   28 factor: power .

    $default  reduce using rule 28 (factor)


state 23

   29 power: atom . STAR_STAR factor
   30      | atom .

    STAR_STAR  shift, and go to state 43

    $default  reduce using rule 30 (power)


state 24

   25 factor: PLUS factor .

    $default  reduce using rule 25 (factor)


state 25

    6 star_expr: MULTIPLY expr .
    7 expr: expr . OR xor_expr

    OR  shift, and go to state 31

    $default  reduce using rule 6 (star_expr)


state 26

   26 factor: MINUS factor .

    $default  reduce using rule 26 (factor)


state 27

   27 factor: TILDA factor .

    $default  reduce using rule 27 (factor)


state 28

    0 $accept: start $end .

    $default  accept


state 29

    2 start: star_expr NEWLINE .

    $default  reduce using rule 2 (start)


state 30

    1 start: expr NEWLINE .

    $default  reduce using rule 1 (start)


state 31

    7 expr: expr OR . xor_expr

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    xor_expr    go to state 44
    and_expr    go to state 17
    shift_expr  go to state 18
    arith_expr  go to state 19
    term        go to state 20
    factor      go to state 21
    power       go to state 22
    atom        go to state 23


state 32

    9 xor_expr: xor_expr XOR . and_expr

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    and_expr    go to state 45
    shift_expr  go to state 18
    arith_expr  go to state 19
    term        go to state 20
    factor      go to state 21
    power       go to state 22
    atom        go to state 23


state 33

   11 and_expr: and_expr AND . shift_expr

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    shift_expr  go to state 46
    arith_expr  go to state 19
    term        go to state 20
    factor      go to state 21
    power       go to state 22
    atom        go to state 23


state 34

   13 shift_expr: shift_expr LESS_LESS . arith_expr

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    arith_expr  go to state 47
    term        go to state 20
    factor      go to state 21
    power       go to state 22
    atom        go to state 23


state 35

   14 shift_expr: shift_expr GREATER_GREATER . arith_expr

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    arith_expr  go to state 48
    term        go to state 20
    factor      go to state 21
    power       go to state 22
    atom        go to state 23


state 36

   16 arith_expr: arith_expr PLUS . term

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    term    go to state 49
    factor  go to state 21
    power   go to state 22
    atom    go to state 23


state 37

   17 arith_expr: arith_expr MINUS . term

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    term    go to state 50
    factor  go to state 21
    power   go to state 22
    atom    go to state 23


state 38

   20 term: term MULTIPLY . factor

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    factor  go to state 51
    power   go to state 22
    atom    go to state 23


state 39

   22 term: term R_SLASH . factor

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    factor  go to state 52
    power   go to state 22
    atom    go to state 23


state 40

   19 term: term R_SLASH_SLASH . factor

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    factor  go to state 53
    power   go to state 22
    atom    go to state 23


state 41

   21 term: term T_AT . factor

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    factor  go to state 54
    power   go to state 22
    atom    go to state 23


state 42

   23 term: term PERCENT . factor

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    factor  go to state 55
    power   go to state 22
    atom    go to state 23


state 43

   29 power: atom STAR_STAR . factor

    T_NUMBER  shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_NAME    shift, and go to state 4
    PLUS      shift, and go to state 5
    MINUS     shift, and go to state 7
    TILDA     shift, and go to state 8
    "..."     shift, and go to state 9
    "None"    shift, and go to state 10
    "True"    shift, and go to state 11
    "False"   shift, and go to state 12

    factor  go to state 56
    power   go to state 22
    atom    go to state 23


state 44

    7 expr: expr OR xor_expr .
    9 xor_expr: xor_expr . XOR and_expr

    XOR  shift, and go to state 32

    $default  reduce using rule 7 (expr)


state 45

    9 xor_expr: xor_expr XOR and_expr .
   11 and_expr: and_expr . AND shift_expr

    AND  shift, and go to state 33

    $default  reduce using rule 9 (xor_expr)


state 46

   11 and_expr: and_expr AND shift_expr .
   13 shift_expr: shift_expr . LESS_LESS arith_expr
   14           | shift_expr . GREATER_GREATER arith_expr

    LESS_LESS        shift, and go to state 34
    GREATER_GREATER  shift, and go to state 35

    $default  reduce using rule 11 (and_expr)


state 47

   13 shift_expr: shift_expr LESS_LESS arith_expr .
   16 arith_expr: arith_expr . PLUS term
   17           | arith_expr . MINUS term

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37

    $default  reduce using rule 13 (shift_expr)


state 48

   14 shift_expr: shift_expr GREATER_GREATER arith_expr .
   16 arith_expr: arith_expr . PLUS term
   17           | arith_expr . MINUS term

    PLUS   shift, and go to state 36
    MINUS  shift, and go to state 37

    $default  reduce using rule 14 (shift_expr)


state 49

   16 arith_expr: arith_expr PLUS term .
   19 term: term . R_SLASH_SLASH factor
   20     | term . MULTIPLY factor
   21     | term . T_AT factor
   22     | term . R_SLASH factor
   23     | term . PERCENT factor

    MULTIPLY       shift, and go to state 38
    R_SLASH        shift, and go to state 39
    R_SLASH_SLASH  shift, and go to state 40
    T_AT           shift, and go to state 41
    PERCENT        shift, and go to state 42

    $default  reduce using rule 16 (arith_expr)


state 50

   17 arith_expr: arith_expr MINUS term .
   19 term: term . R_SLASH_SLASH factor
   20     | term . MULTIPLY factor
   21     | term . T_AT factor
   22     | term . R_SLASH factor
   23     | term . PERCENT factor

    MULTIPLY       shift, and go to state 38
    R_SLASH        shift, and go to state 39
    R_SLASH_SLASH  shift, and go to state 40
    T_AT           shift, and go to state 41
    PERCENT        shift, and go to state 42

    $default  reduce using rule 17 (arith_expr)


state 51

   20 term: term MULTIPLY factor .

    $default  reduce using rule 20 (term)


state 52

   22 term: term R_SLASH factor .

    $default  reduce using rule 22 (term)


state 53

   19 term: term R_SLASH_SLASH factor .

    $default  reduce using rule 19 (term)


state 54

   21 term: term T_AT factor .

    $default  reduce using rule 21 (term)


state 55

   23 term: term PERCENT factor .

    $default  reduce using rule 23 (term)


state 56

   29 power: atom STAR_STAR factor .

    $default  reduce using rule 29 (power)
